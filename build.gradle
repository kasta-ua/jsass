import java.nio.file.Paths
import java.nio.file.Path

plugins {
    id 'com.github.ben-manes.versions' version '0.25.0'
    id 'net.researchgate.release' version '2.8.1'
    id 'org.ajoberstar.grgit' version '3.1.1'
    id 'org.sonarqube' version '2.7.1'
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'ua.kasta'
description = 'SASS compiler using libsass.'

sourceCompatibility = 1.8
targetCompatibility = 1.8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'jsass',
                'Implementation-Version': version
    }
    into("META-INF/maven/${project.group}/${project.name}") {
        from generatePomFileForMavenPublication
        rename { it.replace('pom-default.xml', 'pom.xml') }
    }
}

repositories {
    mavenCentral()
}

dependencyLocking {
    lockAllConfigurations()
}

dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'
    compile group: 'org.sharegov', name: 'mjson', version: '1.4.1'
    testRuntime group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.28'
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.5.2')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.5.2')
    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.5.2')
    testImplementation('org.hamcrest:hamcrest-library:1.3')
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

